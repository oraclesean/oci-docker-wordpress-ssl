# Copyright (c) 2021 Oracle and/or its affiliates. All rights reserved.
# Licensed under the Universal Permissive License v 1.0 as shown at http://oss.oracle.com/licenses/upl.
# 
version: '3.3'
services:
  db:
    image: mysql:5.7
    volumes:
#      - db_data:/var/lib/mysql
      - ./mysql:/var/lib/mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${mysql_root_password}
      MYSQL_DATABASE: ${wp_schema}
      MYSQL_USER: ${wp_db_user}
      MYSQL_PASSWORD: ${wp_db_password}

  wordpress:
    depends_on:
      - db
    image: docker.io/bitnami/wordpress-nginx:latest
#    image: wordpress:latest
    ports:
      - "80:8080"
      - "443:8443"
    restart: always
    environment:
#      WORDPRESS_DB_HOST: db:3306
#      WORDPRESS_DB_USER: ${wp_db_user}
#      WORDPRESS_DB_PASSWORD: ${wp_db_password}
#      WORDPRESS_DB_NAME: ${wp_schema}
      WORDPRESS_DATABASE_HOST: db
      WORDPRESS_DATABASE_PORT_NUMBER: 3306
      WORDPRESS_DATABASE_USER: ${wp_db_user} 
      WORDPRESS_DATABASE_NAME: ${wp_schema}
      WORDPRESS_DATABASE_PASSWORD: ${wp_db_password}
      # WordPress configurations:
#      WORDPRESS_USERNAME: WordPress application username. Default: user
#      WORDPRESS_PASSWORD: WordPress application password. Default: bitnami
#      WORDPRESS_EMAIL: WordPress application email. Default: user@example.com
#      WORDPRESS_FIRST_NAME: WordPress user first name. Default: FirstName
#      WORDPRESS_LAST_NAME: WordPress user last name. Default: LastName
#      WORDPRESS_BLOG_NAME: WordPress blog name. Default: User's blog
#      WORDPRESS_DATA_TO_PERSIST: Space separated list of files and directories to persist. Use a space to persist no data: " ". Default: "wp-config.php wp-content"
#      WORDPRESS_RESET_DATA_PERMISSIONS: Force resetting ownership/permissions on persisted data when restarting WordPress, otherwise it assumes the ownership/permissions are correct. Ignored when running WP as non-root. Default: no
#      WORDPRESS_TABLE_PREFIX: Table prefix to use in WordPress. Default: wp_
#      WORDPRESS_PLUGINS: List of WordPress plugins to install and activate, separated via commas. Can also be set to all to activate all currently installed plugins, or none to skip. Default: none
#      WORDPRESS_EXTRA_INSTALL_ARGS: Extra flags to append to the WordPress 'wp core install' command call. No defaults.
#      WORDPRESS_EXTRA_CLI_ARGS: Extra flags to append to all WP-CLI command calls. No defaults.
#      WORDPRESS_EXTRA_WP_CONFIG_CONTENT: Extra configuration to append to wp-config.php during install. No defaults.
#      WORDPRESS_ENABLE_HTTPS: Whether to use HTTPS by default. Default: no
#      WORDPRESS_SKIP_BOOTSTRAP: Skip the WordPress installation wizard. This is necessary when providing a database with existing WordPress data. Default: no
#      WORDPRESS_AUTO_UPDATE_LEVEL: Level of auto-updates to allow for the WordPress core installation. Valid values: major, minor, none. Default: none
      # Multisite configurations:
#      WORDPRESS_ENABLE_MULTISITE: yes
#      WORDPRESS_MULTISITE_HOST: WordPress hostname/address. Only used for Multisite installations. No defaults.
#      WORDPRESS_MULTISITE_EXTERNAL_HTTP_PORT_NUMBER: Port to used by WordPress to generate URLs and links when accessing using HTTP. Will be ignored if multisite mode is not enabled. Default 80
#      WORDPRESS_MULTISITE_EXTERNAL_HTTPS_PORT_NUMBER: Port to used by WordPress to generate URLs and links when accessing using HTTPS. Will be ignored if multisite mode is not enabled. Default 443
#      WORDPRESS_MULTISITE_NETWORK_TYPE: WordPress Multisite network type to enable. Valid values: subfolder, subdirectory, subdomain. Default: subdomain
#      WORDPRESS_MULTISITE_ENABLE_NIP_IO_REDIRECTION: Whether to enable IP address redirection to nip.io wildcard DNS when enabling WordPress Multisite. This is useful when running on an IP address with subdomain network type. Default: no
#      WORDPRESS_MULTISITE_FILEUPLOAD_MAXK: Maximum upload file size allowed for WordPress Multisite uploads, in kilobytes. Default: 81920
      # Database security settings:
#      WORDPRESS_ENABLE_DATABASE_SSL: Whether to enable SSL for database connections. Default: no
#      WORDPRESS_VERIFY_DATABASE_SSL: Whether to verify the database SSL certificate when SSL is enabled for database connections. Default: yes
#      WORDPRESS_DATABASE_SSL_CERT_FILE: Path to the database client certificate file. No defaults
#      WORDPRESS_DATABASE_SSL_KEY_FILE: Path to the database client certificate key file. No defaults
#      WORDPRESS_DATABASE_SSL_CA_FILE: Path to the database server CA bundle file. No defaults
      # Database creation:
#      MYSQL_CLIENT_FLAVOR: SQL database flavor. Valid values: mariadb or mysql. Default: mariadb
#      MYSQL_CLIENT_DATABASE_HOST: Hostname for the MariaDB or MySQL server. Default: mariadb
#      MYSQL_CLIENT_DATABASE_PORT_NUMBER: Port used by the MariaDB or MySQL server. Default: 3306
#      MYSQL_CLIENT_DATABASE_ROOT_USER: Database admin user. Default: root
#      MYSQL_CLIENT_DATABASE_ROOT_PASSWORD: Database password for the database admin user. No defaults.
#      MYSQL_CLIENT_CREATE_DATABASE_NAME: New database to be created by the mysql client module. No defaults.
#      MYSQL_CLIENT_CREATE_DATABASE_USER: New database user to be created by the mysql client module. No defaults.
#      MYSQL_CLIENT_CREATE_DATABASE_PASSWORD: Database password for the MYSQL_CLIENT_CREATE_DATABASE_USER user. No defaults.
#      MYSQL_CLIENT_CREATE_DATABASE_CHARACTER_SET: Character set to use for the new database. No defaults.
#      MYSQL_CLIENT_CREATE_DATABASE_COLLATE: Database collation to use for the new database. No defaults.
#      MYSQL_CLIENT_ENABLE_SSL_WRAPPER: Whether to force SSL connections to the database via the mysql CLI tool. Useful for applications that rely on the CLI instead of APIs. Default: no
#      MYSQL_CLIENT_ENABLE_SSL: Whether to force SSL connections for the database. Default: no
#      MYSQL_CLIENT_SSL_CA_FILE: Path to the SSL CA file for the new database. No defaults
#      MYSQL_CLIENT_SSL_CERT_FILE: Path to the SSL CA file for the new database. No defaults
#      MYSQL_CLIENT_SSL_KEY_FILE: Path to the SSL CA file for the new database. No defaults
    volumes:
#      - wp_data:/var/www/html
##      - ./config/php.conf.uploads.ini:/usr/local/etc/php/conf.d/uploads.ini
#      - ./wp-app:/var/www/html
      - ./wp-app:/bitnami/wordpress
##      - ./certs:/certs
      - ./config/nginx/my_server_block.conf:/opt/bitnami/nginx/conf/server_blocks/my_server_block.conf:ro
      - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./config/certs:/etc/nginx/certs
      - ./config/private:/etc/ssl/private:ro
#      - ./config/default-ssl.conf:/etc/apache2/sites-available/default-ssl.conf:ro
      - ./config/docker-entrypoint.sh:/usr/local/bin/docker-entrypoint.sh:ro

  wordpress-cli:
    depends_on:
      - db
      - wordpress
    image: wordpress:cli
    user: xfs
    command: >
      /bin/sh -c '
        until wp core install --path="/bitnami/wordpress" --url="http://${wp_site_url}" --title="WordPress on OCI" --admin_user=${wp_admin_user} --admin_password=${wp_admin_password} --admin_email=foo@bar.com; do
          echo "WordPress not ready, retrying in 10 seconds..."
          sleep 10;
        done    
        echo "WordPress initialized..."  
      '
    environment:
#      WORDPRESS_DB_HOST: db:3306
#      WORDPRESS_DB_USER: ${wp_db_user}
#      WORDPRESS_DB_PASSWORD: ${wp_db_password}
#      WORDPRESS_DB_NAME: ${wp_schema}
      WORDPRESS_DATABASE_HOST: db
      WORDPRESS_DATABASE_PORT_NUMBER: 3306
      WORDPRESS_DATABASE_USER: ${wp_db_user}
      WORDPRESS_DATABASE_NAME: ${wp_schema}
      WORDPRESS_DATABASE_PASSWORD: ${wp_db_password}
    # vstm: add shared volume
    volumes:
#      - wp_data:/var/www/html
      - ./wp-app:/bitnami/wordpress
#volumes:
#    db_data: {}
#    wp_data: {}
